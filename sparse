#include <bits/stdc++.h>
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("-O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std;
#define pb push_back
#define fst first
#define snd second
#define all(c) (c).begin(), (c).end()
typedef long long ll;
typedef long double ld;
const ll INF64 = 1e18 + 228;
const int INF32 = 1e9 + 1337;
const int MOD = 1e9 + 7;
const ld eps = 1e-7;
const int N = 200005;
const int logn = 13;
ll a[N];
ll mn[N][logn];
ll lg[N];
ll fnd(ll u, ll v)
{
    if(u > v) swap(u, v);
    ll t = lg[v - u];
    ll ans = min(mn[u][t], mn[v - (1 << t) + 1][t]);
    return ans;
}
signed main()
{
//    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#ifndef __WIN32
    ifstream cin("input.txt");
    ofstream cout("output.txt");
#endif

    ll n, m, x;
    cin >> n >> m >> x;
    for(ll l = 0; l < logn; l++)
        for(ll i = (1 << l); i < n; i++)
        {
            lg[i] = l;
        }
    a[0] = x;
    for(int i = 1; i < n; i++)
        a[i] = (23 * a[i - 1] + 21563) % 16714589;
    for(ll i = n - 1; i >= 0; i--)
    {
        mn[i][0] = a[i];
        for(ll l = 0; l < logn - 1; l++)
        {
            mn[i][l + 1] = min(mn[i][l], mn[i + (1 << l)][l]);
        }
    }
    ll u, v, ans = 0;
    cin >> u >> v;
    for(int i = 0; i < m - 1; i++)
    {
        ans = fnd(u - 1, v - 1);
//        cout << u << " " << v << " " << ans << "\n";
        u = ((17 * u + 751 + ans + 2 * (i + 1)) % n) + 1;
        v = ((13 * v + 593 + ans + 5 * (i + 1)) % n) + 1;
    }
    cout << u << " " << v << " " << fnd(u - 1, v - 1);

    return 0;
}
